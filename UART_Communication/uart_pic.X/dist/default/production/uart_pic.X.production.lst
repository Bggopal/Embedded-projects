

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 19 13:05:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  001A                     _RCREG	set	26
   169  0019                     _TXREG	set	25
   170  0031                     _RB1	set	49
   171  0065                     _RCIF	set	101
   172  00C1                     _OERR	set	193
   173  0064                     _TXIF	set	100
   174  00C6                     _RX9	set	198
   175  00C4                     _CREN	set	196
   176  00C7                     _SPEN	set	199
   177  0086                     _TRISB	set	134
   178  0099                     _SPBRG	set	153
   179  04C6                     _TX9	set	1222
   180  04C5                     _TXEN	set	1221
   181  04C4                     _SYNC	set	1220
   182  04C2                     _BRGH	set	1218
   183  043F                     _TRISC7	set	1087
   184  043E                     _TRISC6	set	1086
   185                           
   186                           	psect	strings
   187  0003                     __pstrings:
   188  0003                     stringtab:
   189  0003                     __stringtab:
   190  0003                     stringcode:	
   191                           ;	String table - string pointers are 1 byte each
   192                           
   193  0003                     stringdir:
   194  0003  3000               	movlw	high stringdir
   195  0004  008A               	movwf	10
   196  0005  0804               	movf	4,w
   197  0006  0A84               	incf	4,f
   198  0007  0782               	addwf	2,f
   199  0008                     __stringbase:
   200  0008  3400               	retlw	0
   201  0009                     __end_of__stringtab:
   202  0009                     STR_1:
   203  0009  3455               	retlw	85	;'U'
   204  000A  3441               	retlw	65	;'A'
   205  000B  3452               	retlw	82	;'R'
   206  000C  3454               	retlw	84	;'T'
   207  000D  3420               	retlw	32	;' '
   208  000E  3443               	retlw	67	;'C'
   209  000F  346F               	retlw	111	;'o'
   210  0010  346D               	retlw	109	;'m'
   211  0011  346D               	retlw	109	;'m'
   212  0012  3475               	retlw	117	;'u'
   213  0013  346E               	retlw	110	;'n'
   214  0014  3469               	retlw	105	;'i'
   215  0015  3463               	retlw	99	;'c'
   216  0016  3461               	retlw	97	;'a'
   217  0017  3474               	retlw	116	;'t'
   218  0018  3469               	retlw	105	;'i'
   219  0019  346F               	retlw	111	;'o'
   220  001A  346E               	retlw	110	;'n'
   221  001B  3420               	retlw	32	;' '
   222  001C  3449               	retlw	73	;'I'
   223  001D  346E               	retlw	110	;'n'
   224  001E  3469               	retlw	105	;'i'
   225  001F  3474               	retlw	116	;'t'
   226  0020  3469               	retlw	105	;'i'
   227  0021  3461               	retlw	97	;'a'
   228  0022  346C               	retlw	108	;'l'
   229  0023  3469               	retlw	105	;'i'
   230  0024  347A               	retlw	122	;'z'
   231  0025  3465               	retlw	101	;'e'
   232  0026  3464               	retlw	100	;'d'
   233  0027  3400               	retlw	0
   234  0028                     STR_2:
   235  0028  3448               	retlw	72	;'H'
   236  0029  3469               	retlw	105	;'i'
   237  002A  3420               	retlw	32	;' '
   238  002B  3474               	retlw	116	;'t'
   239  002C  3468               	retlw	104	;'h'
   240  002D  3465               	retlw	101	;'e'
   241  002E  3472               	retlw	114	;'r'
   242  002F  3465               	retlw	101	;'e'
   243  0030  3420               	retlw	32	;' '
   244  0031  3400               	retlw	0
   245                           
   246                           	psect	cinit
   247  07FC                     start_initialization:	
   248                           ; #config settings
   249                           
   250  07FC                     __initialization:
   251  07FC                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  07FC                     __end_of__initialization:
   255  07FC  0183               	clrf	3
   256  07FD  120A  118A  2FC4   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	cstackCOMMON
   259  0070                     __pcstackCOMMON:
   260  0070                     ?_Initialize_UART:
   261  0070                     ??_Initialize_UART:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_UART_send_char:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??_UART_send_char:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_UART_send_string:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_main:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     UART_send_char@bt:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           ; 1 bytes @ 0x0
   281  0070                     	ds	1
   282  0071                     ??_UART_send_string:
   283                           
   284                           ; 1 bytes @ 0x1
   285  0071                     	ds	1
   286  0072                     UART_send_string@st_pt:
   287                           
   288                           ; 1 bytes @ 0x2
   289  0072                     	ds	1
   290  0073                     ??_main:
   291                           
   292                           ; 1 bytes @ 0x3
   293  0073                     	ds	3
   294                           
   295                           	psect	maintext
   296  07C4                     __pmaintext:	
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 90 in file "uart.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : B00/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          3       0       0       0       0
   319 ;;      Totals:         3       0       0       0       0
   320 ;;Total ram usage:        3 bytes
   321 ;; Hardware stack levels required when called: 2
   322 ;; This function calls:
   323 ;;		_Initialize_UART
   324 ;;		_UART_send_char
   325 ;;		_UART_send_string
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           
   332                           ;psect for function _main
   333  07C4                     _main:
   334  07C4                     l721:	
   335                           ;incstack = 0
   336                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   337                           
   338                           
   339                           ;uart.c: 92:     TRISB = 0x06;
   340  07C4  3006               	movlw	6
   341  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   342  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   343  07C7  0086               	movwf	6	;volatile
   344  07C8                     l723:
   345                           
   346                           ;uart.c: 93:     Initialize_UART();
   347  07C8  120A  118A  278D  120A  118A  	fcall	_Initialize_UART
   348  07CD                     l725:
   349                           
   350                           ;uart.c: 95:     UART_send_string("UART Communication Initialized");
   351  07CD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   352  07CE  120A  118A  27A5  120A  118A  	fcall	_UART_send_string
   353  07D3                     l727:
   354                           
   355                           ;uart.c: 96:     UART_send_char(10);
   356  07D3  300A               	movlw	10
   357  07D4  120A  118A  2783  120A  118A  	fcall	_UART_send_char
   358  07D9                     l729:
   359                           
   360                           ;uart.c: 99:     {;uart.c: 100:         if (RB1 == 1)
   361  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   362  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   363  07DB  1C86               	btfss	6,1	;volatile
   364  07DC  2FDE               	goto	u71
   365  07DD  2FDF               	goto	u70
   366  07DE                     u71:
   367  07DE  2FD9               	goto	l729
   368  07DF                     u70:
   369  07DF                     l731:
   370                           
   371                           ;uart.c: 101:         {;uart.c: 102:             UART_send_string("Hi there ");
   372  07DF  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   373  07E0  120A  118A  27A5  120A  118A  	fcall	_UART_send_string
   374  07E5                     l733:
   375                           
   376                           ;uart.c: 103:             _delay((unsigned long)((500)*(20000000/4000.0)));
   377  07E5  300D               	movlw	13
   378  07E6  00F5               	movwf	??_main+2
   379  07E7  30AF               	movlw	175
   380  07E8  00F4               	movwf	??_main+1
   381  07E9  30B6               	movlw	182
   382  07EA  00F3               	movwf	??_main
   383  07EB                     u87:
   384  07EB  0BF3               	decfsz	??_main,f
   385  07EC  2FEB               	goto	u87
   386  07ED  0BF4               	decfsz	??_main+1,f
   387  07EE  2FEB               	goto	u87
   388  07EF  0BF5               	decfsz	??_main+2,f
   389  07F0  2FEB               	goto	u87
   390  07F1  0000               	nop
   391  07F2                     l735:
   392                           
   393                           ;uart.c: 104:             UART_send_char(10);
   394  07F2  300A               	movlw	10
   395  07F3  120A  118A  2783  120A  118A  	fcall	_UART_send_char
   396  07F8  2FD9               	goto	l729
   397  07F9  120A  118A  2800   	ljmp	start
   398  07FC                     __end_of_main:
   399                           
   400                           	psect	text1
   401  07A5                     __ptext1:	
   402 ;; *************** function _UART_send_string *****************
   403 ;; Defined at:
   404 ;;		line 82 in file "uart.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;  st_pt           1    wreg     PTR unsigned char 
   407 ;;		 -> STR_2(10), STR_1(31), 
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  st_pt           1    2[COMMON] PTR unsigned char 
   410 ;;		 -> STR_2(10), STR_1(31), 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         1       0       0       0       0
   422 ;;      Temps:          1       0       0       0       0
   423 ;;      Totals:         2       0       0       0       0
   424 ;;Total ram usage:        2 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; Hardware stack levels required when called: 1
   427 ;; This function calls:
   428 ;;		_UART_send_char
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _UART_send_string
   436  07A5                     _UART_send_string:
   437                           
   438                           ;incstack = 0
   439                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   440                           ;UART_send_string@st_pt stored from wreg
   441  07A5  00F2               	movwf	UART_send_string@st_pt
   442  07A6                     l713:
   443                           
   444                           ;uart.c: 82: void UART_send_string(char* st_pt);uart.c: 83: {;uart.c: 84:     while(*st_
      +                          pt)
   445  07A6  2FB7               	goto	l719
   446  07A7                     l715:
   447                           
   448                           ;uart.c: 85:         UART_send_char(*st_pt++);
   449  07A7  0872               	movf	UART_send_string@st_pt,w
   450  07A8  0084               	movwf	4
   451  07A9  120A  118A  2003  120A  118A  	fcall	stringdir
   452  07AE  120A  118A  2783  120A  118A  	fcall	_UART_send_char
   453  07B3                     l717:
   454  07B3  3001               	movlw	1
   455  07B4  00F1               	movwf	??_UART_send_string
   456  07B5  0871               	movf	??_UART_send_string,w
   457  07B6  07F2               	addwf	UART_send_string@st_pt,f
   458  07B7                     l719:
   459                           
   460                           ;uart.c: 84:     while(*st_pt)
   461  07B7  0872               	movf	UART_send_string@st_pt,w
   462  07B8  0084               	movwf	4
   463  07B9  120A  118A  2003  120A  118A  	fcall	stringdir
   464  07BE  3A00               	xorlw	0
   465  07BF  1D03               	skipz
   466  07C0  2FC2               	goto	u61
   467  07C1  2FC3               	goto	u60
   468  07C2                     u61:
   469  07C2  2FA7               	goto	l715
   470  07C3                     u60:
   471  07C3                     l58:
   472  07C3  0008               	return
   473  07C4                     __end_of_UART_send_string:
   474                           
   475                           	psect	text2
   476  0783                     __ptext2:	
   477 ;; *************** function _UART_send_char *****************
   478 ;; Defined at:
   479 ;;		line 59 in file "uart.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  bt              1    wreg     unsigned char 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  bt              1    0[COMMON] unsigned char 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         1       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         1       0       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		_UART_send_string
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _UART_send_char
   509  0783                     _UART_send_char:
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in _UART_send_char: [wreg]
   513                           ;UART_send_char@bt stored from wreg
   514  0783  00F0               	movwf	UART_send_char@bt
   515  0784                     l659:
   516  0784                     l42:	
   517                           ;uart.c: 59: void UART_send_char(char bt);uart.c: 60: {;uart.c: 61:     while(!TXIF);
   518                           
   519  0784  1283               	bcf	3,5	;RP0=0, select bank0
   520  0785  1303               	bcf	3,6	;RP1=0, select bank0
   521  0786  1E0C               	btfss	12,4	;volatile
   522  0787  2F89               	goto	u11
   523  0788  2F8A               	goto	u10
   524  0789                     u11:
   525  0789  2F84               	goto	l42
   526  078A                     u10:
   527  078A                     l661:
   528                           
   529                           ;uart.c: 62:     TXREG = bt;
   530  078A  0870               	movf	UART_send_char@bt,w
   531  078B  0099               	movwf	25	;volatile
   532  078C                     l45:
   533  078C  0008               	return
   534  078D                     __end_of_UART_send_char:
   535                           
   536                           	psect	text3
   537  078D                     __ptext3:	
   538 ;; *************** function _Initialize_UART *****************
   539 ;; Defined at:
   540 ;;		line 28 in file "uart.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _Initialize_UART
   569  078D                     _Initialize_UART:
   570  078D                     l663:	
   571                           ;incstack = 0
   572                           ; Regs used in _Initialize_UART: [wreg]
   573                           
   574                           
   575                           ;uart.c: 31:     TRISC6 = 0;
   576  078D  1683               	bsf	3,5	;RP0=1, select bank1
   577  078E  1303               	bcf	3,6	;RP1=0, select bank1
   578  078F  1307               	bcf	7,6	;volatile
   579                           
   580                           ;uart.c: 32:     TRISC7 = 1;
   581  0790  1787               	bsf	7,7	;volatile
   582  0791                     l665:
   583                           
   584                           ;uart.c: 37:     SPBRG = ((20000000/16)/9600) - 1;
   585  0791  3081               	movlw	129
   586  0792  0099               	movwf	25	;volatile
   587  0793                     l667:
   588                           
   589                           ;uart.c: 38:     BRGH = 1;
   590  0793  1518               	bsf	24,2	;volatile
   591  0794                     l669:
   592                           
   593                           ;uart.c: 42:     SYNC = 0;
   594  0794  1218               	bcf	24,4	;volatile
   595  0795                     l671:
   596                           
   597                           ;uart.c: 43:     SPEN = 1;
   598  0795  1283               	bcf	3,5	;RP0=0, select bank0
   599  0796  1303               	bcf	3,6	;RP1=0, select bank0
   600  0797  1798               	bsf	24,7	;volatile
   601  0798                     l673:
   602                           
   603                           ;uart.c: 47:     TXEN = 1;
   604  0798  1683               	bsf	3,5	;RP0=1, select bank1
   605  0799  1303               	bcf	3,6	;RP1=0, select bank1
   606  079A  1698               	bsf	24,5	;volatile
   607  079B                     l675:
   608                           
   609                           ;uart.c: 48:     CREN = 1;
   610  079B  1283               	bcf	3,5	;RP0=0, select bank0
   611  079C  1303               	bcf	3,6	;RP1=0, select bank0
   612  079D  1618               	bsf	24,4	;volatile
   613  079E                     l677:
   614                           
   615                           ;uart.c: 52:     TX9 = 0;
   616  079E  1683               	bsf	3,5	;RP0=1, select bank1
   617  079F  1303               	bcf	3,6	;RP1=0, select bank1
   618  07A0  1318               	bcf	24,6	;volatile
   619  07A1                     l679:
   620                           
   621                           ;uart.c: 53:     RX9 = 0;
   622  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   623  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   624  07A3  1318               	bcf	24,6	;volatile
   625  07A4                     l39:
   626  07A4  0008               	return
   627  07A5                     __end_of_Initialize_UART:
   628  007E                     btemp	set	126	;btemp
   629  007E                     wtemp0	set	126
   630                           
   631                           	psect	config
   632                           
   633                           ;Config register CONFIG @ 0x2007
   634                           ;	Oscillator Selection bits
   635                           ;	FOSC = HS, HS oscillator
   636                           ;	Watchdog Timer Enable bit
   637                           ;	WDTE = OFF, WDT disabled
   638                           ;	Power-up Timer Enable bit
   639                           ;	PWRTE = OFF, PWRT disabled
   640                           ;	Brown-out Reset Enable bit
   641                           ;	BOREN = ON, BOR enabled
   642                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   643                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   644                           ;	Data EEPROM Memory Code Protection bit
   645                           ;	CPD = OFF, Data EEPROM code protection off
   646                           ;	Flash Program Memory Write Enable bits
   647                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   648                           ;	In-Circuit Debugger Mode bit
   649                           ;	DEBUG = 0x1, unprogrammed default
   650                           ;	Flash Program Memory Code Protection bit
   651                           ;	CP = OFF, Code protection off
   652  2007                     	org	8199
   653  2007  3F7A               	dw	16250

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 31
		 -> STR_2(CODE[10]), STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     141
                                              3 COMMON     3     3      0
                    _Initialize_UART
                     _UART_send_char
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     126
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_UART
   _UART_send_char
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 19 13:05:56 2021

                        pc 0002                         l42 0784                         l45 078C  
                       l39 07A4                         l58 07C3                         u10 078A  
                       u11 0789                         u60 07C3                         u61 07C2  
                       u70 07DF                         u71 07DE                         u87 07EB  
                       fsr 0004                        l713 07A6                        l721 07C4  
                      l715 07A7                        l731 07DF                        l723 07C8  
                      l661 078A                        l717 07B3                        l733 07E5  
                      l725 07CD                        l671 0795                        l663 078D  
                      l719 07B7                        l735 07F2                        l727 07D3  
                      l673 0798                        l665 0791                        l729 07D9  
                      l675 079B                        l667 0793                        l659 0784  
                      l677 079E                        l669 0794                        l679 07A1  
                      _RB1 0031                        _RX9 00C6                        _TX9 04C6  
                      fsr0 0004                       STR_1 0009                       STR_2 0028  
                     _BRGH 04C2                       _CREN 00C4                       _RCIF 0065  
                     _OERR 00C1                       _SPEN 00C7                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4                       _main 07C4  
                     btemp 007E                       start 0000  __size_of_UART_send_string 001F  
                    ?_main 0070                      _RCREG 001A                      _SPBRG 0099  
                    _TRISB 0086                      _TXREG 0019                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 07FC  
             __end_of_main 07FC                     ??_main 0073                     _TRISC6 043E  
                   _TRISC7 043F    __end_of__initialization 07FC             __pcstackCOMMON 0070  
         _UART_send_string 07A5   __size_of_Initialize_UART 0018                 __pmaintext 07C4  
  __size_of_UART_send_char 000A                 __stringtab 0003                    __ptext1 07A5  
                  __ptext2 0783                    __ptext3 078D          ??_Initialize_UART 0070  
     end_of_initialization 07FC   __end_of_UART_send_string 07C4        start_initialization 07FC  
           _UART_send_char 0783     __end_of_UART_send_char 078D                  ___latbits 0002  
          _Initialize_UART 078D           UART_send_char@bt 0070                  __pstrings 0003  
          ?_UART_send_char 0070                __stringbase 0008      UART_send_string@st_pt 0072  
        ?_UART_send_string 0070         ??_UART_send_string 0071    __end_of_Initialize_UART 07A5  
       __end_of__stringtab 0009              __size_of_main 0038           ?_Initialize_UART 0070  
                stringcode 0003           ??_UART_send_char 0070                   stringdir 0003  
                 stringtab 0003  
